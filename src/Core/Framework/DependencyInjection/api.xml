<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>
        <service id="Laser\Core\Framework\Routing\RequestTransformerInterface"
                 class="Laser\Core\Framework\Routing\RequestTransformer"
                 public="true"/>

        <service id="Laser\Core\Framework\Api\Controller\FallbackController" public="true">
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="Laser\Core\Framework\Api\EventListener\CorsListener">
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="Laser\Core\Framework\Api\EventListener\ResponseExceptionListener">
            <tag name="kernel.event_subscriber"/>
            <argument>%kernel.debug%</argument>
        </service>

        <service id="Laser\Core\Framework\Api\EventListener\ResponseHeaderListener">
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="Laser\Core\Framework\Api\Context\ContextValueResolver">
            <tag name="controller.argument_value_resolver" priority="1000"/>
        </service>

        <service id="Laser\Core\Framework\Api\Controller\AccessKeyController" public="true">
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Laser\Core\Framework\Api\Controller\ApiController" public="true">
            <argument type="service" id="Laser\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
            <argument type="service" id="serializer"/>
            <argument type="service" id="api.request_criteria_builder"/>
            <argument type="service" id="Laser\Core\Framework\Api\Converter\ApiVersionConverter"/>
            <argument type="service" id="Laser\Core\Framework\DataAbstractionLayer\EntityProtection\EntityProtectionValidator"/>
            <argument type="service" id="Laser\Core\Framework\Api\Acl\AclCriteriaValidator"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Laser\Core\Framework\Api\Controller\SyncController" public="true">
            <argument type="service" id="Laser\Core\Framework\Api\Sync\SyncService"/>
            <argument type="service" id="serializer"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Laser\Core\Framework\Api\Controller\IndexingController" public="true">
            <argument type="service" id="Laser\Core\Framework\DataAbstractionLayer\Indexing\EntityIndexerRegistry"/>
            <argument type="service" id="messenger.bus.laser"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Laser\Core\Framework\Api\Command\DumpSchemaCommand">
            <argument type="service" id="Laser\Core\Framework\Api\ApiDefinition\DefinitionService"/>

            <tag name="console.command"/>
        </service>

        <service id="Laser\Core\Framework\Api\Command\DumpClassSchemaCommand">
            <tag name="console.command"/>
            <argument>%kernel.bundles_metadata%</argument>
        </service>

        <!-- Serializer -->
        <service id="Laser\Core\Framework\Api\Serializer\JsonApiDecoder">
            <tag name="serializer.encoder"/>
        </service>

        <!-- Response types -->
        <service id="Laser\Core\Framework\Api\Response\ResponseFactoryRegistry">
            <argument type="service" id="Laser\Core\Framework\Api\Response\Type\Api\JsonApiType"/>
            <!-- deactivated, the current sales channel api design does not match the json api requirements -->
            <argument type="service" id="Laser\Core\Framework\Api\Response\Type\Api\JsonType"/>
        </service>

        <service id="Laser\Core\Framework\Api\Response\Type\Api\JsonApiType">
            <argument type="service" id="Laser\Core\Framework\Api\Serializer\JsonApiEncoder"/>
            <argument type="service" id="Laser\Core\System\SalesChannel\Api\StructEncoder"/>
        </service>

        <service id="Laser\Core\Framework\Api\Serializer\JsonApiEncoder"/>

        <service id="Laser\Core\Framework\Api\Serializer\JsonEntityEncoder">
            <argument type="service" id="serializer"/>
            <argument type="service" id="Laser\Core\Framework\Api\Converter\ApiVersionConverter"/>
        </service>

        <service id="Laser\Core\Framework\Api\Response\Type\Api\JsonType">
            <argument type="service" id="Laser\Core\Framework\Api\Serializer\JsonEntityEncoder"/>
            <argument type="service" id="Laser\Core\System\SalesChannel\Api\StructEncoder"/>
        </service>

        <!-- Converter -->
        <service id="Laser\Core\Framework\Api\Converter\ConverterRegistry">
            <argument type="tagged" tag="laser.api.converter"/>
        </service>

        <service id="Laser\Core\Framework\Api\Converter\ApiVersionConverter">
            <argument type="service" id="Laser\Core\Framework\Api\Converter\ConverterRegistry"/>
        </service>

        <!-- API Docs -->
        <service id="Laser\Core\Framework\Api\ApiDefinition\DefinitionService">
            <argument type="service" id="Laser\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
            <argument type="service" id="Laser\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
            <argument type="service" id="Laser\Core\Framework\Api\ApiDefinition\Generator\StoreApiGenerator"/>
            <argument type="service" id="Laser\Core\Framework\Api\ApiDefinition\Generator\OpenApi3Generator"/>
            <argument type="service" id="Laser\Core\Framework\Api\ApiDefinition\Generator\EntitySchemaGenerator"/>
        </service>

        <service id="Laser\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiDefinitionSchemaBuilder"/>

        <service id="Laser\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiPathBuilder"/>

        <service id="Laser\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiSchemaBuilder">
            <argument>%kernel.laser_version%</argument>
        </service>

        <service id="Laser\Core\Framework\Api\ApiDefinition\Generator\BundleSchemaPathCollection">
            <argument type="service" id="kernel.bundles"/>
        </service>

        <service id="Laser\Core\Framework\Api\ApiDefinition\Generator\OpenApi3Generator">
            <argument type="service" id="Laser\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiSchemaBuilder"/>
            <argument type="service" id="Laser\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiPathBuilder"/>
            <argument type="service" id="Laser\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiDefinitionSchemaBuilder"/>
            <argument>%kernel.bundles_metadata%</argument>
            <argument type="service" id="Laser\Core\Framework\Api\ApiDefinition\Generator\BundleSchemaPathCollection"/>
        </service>

        <service id="Laser\Core\Framework\Api\ApiDefinition\Generator\StoreApiGenerator">
            <argument type="service" id="Laser\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiSchemaBuilder"/>
            <argument type="service" id="Laser\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiDefinitionSchemaBuilder"/>
            <argument>%kernel.bundles_metadata%</argument>
            <argument type="service" id="Laser\Core\Framework\Api\ApiDefinition\Generator\BundleSchemaPathCollection"/>
        </service>

        <service id="Laser\Core\Framework\Api\ApiDefinition\Generator\EntitySchemaGenerator">
        </service>

        <service id="Laser\Core\Framework\Api\ApiDefinition\Generator\CachedEntitySchemaGenerator" decorates="Laser\Core\Framework\Api\ApiDefinition\Generator\EntitySchemaGenerator">
            <argument type="service" id="Laser\Core\Framework\Api\ApiDefinition\Generator\CachedEntitySchemaGenerator.inner"/>
            <argument type="service" id="cache.object"/>
        </service>

        <service id="Laser\Core\Framework\Api\Controller\InfoController" public="true">
            <argument type="service" id="Laser\Core\Framework\Api\ApiDefinition\DefinitionService"/>
            <argument type="service" id="parameter_bag"/>
            <argument type="service" id="kernel" />
            <argument type="service" id="assets.packages" />
            <argument type="service" id="Laser\Core\Framework\Event\BusinessEventCollector" />
            <argument type="service" id="laser.increment.gateway.registry"/>
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument type="service" id="Laser\Core\Maintenance\System\Service\AppUrlVerifier"/>
            <argument type="service" id="Laser\Core\Content\Flow\Api\FlowActionCollector" on-invalid="null"/>
            <argument>%laser.media.enable_url_upload_feature%</argument>
            <argument>%laser.security.csp_templates%</argument>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Laser\Core\Framework\Api\Controller\AuthController" public="true">
            <argument type="service" id="laser.api.authorization_server"/>
            <argument type="service" id="Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory"/>
            <argument type="service" id="laser.rate_limiter"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Laser\Core\Framework\Api\Controller\CacheController" public="true">
            <argument type="service" id="Laser\Core\Framework\Adapter\Cache\CacheClearer"/>
            <argument type="service" id="cache.object"/>
            <argument type="service" id="Laser\Storefront\Framework\Cache\CacheWarmer\CacheWarmer" on-invalid="null"/>
            <argument type="service" id="Laser\Core\Framework\DataAbstractionLayer\Indexing\EntityIndexerRegistry"/>
            <tag name="container.service_subscriber" />
            <tag name="controller.service_arguments" />
            <call method="setContainer">
                <argument type="service" id="Psr\Container\ContainerInterface" />
            </call>
        </service>

        <!-- API OAuth Repositories -->
        <service id="Laser\Core\Framework\Api\OAuth\AccessTokenRepository"/>
        <service id="Laser\Core\Framework\Api\OAuth\ClientRepository">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
        </service>
        <service id="Laser\Core\Framework\Api\OAuth\RefreshTokenRepository">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
        </service>

        <service id="Laser\Core\Framework\Api\OAuth\ScopeRepository">
            <argument type="tagged" tag="laser.oauth.scope"/>
            <argument type="service" id="Doctrine\DBAL\Connection"/>
        </service>

        <service id="Laser\Core\Framework\Api\OAuth\UserRepository">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
        </service>

        <!-- Scopes -->
        <service id="Laser\Core\Framework\Api\OAuth\Scope\WriteScope">
            <tag name="laser.oauth.scope"/>
        </service>

        <service id="Laser\Core\Framework\Api\OAuth\Scope\AdminScope">
            <tag name="laser.oauth.scope"/>
        </service>

        <service id="Laser\Core\Framework\Api\OAuth\Scope\UserVerifiedScope">
            <tag name="laser.oauth.scope"/>
        </service>

        <!-- API -->
        <service class="League\OAuth2\Server\CryptKey" id="laser.private_key">
            <argument>file://%kernel.project_dir%/config/jwt/private.pem</argument>
            <argument>laser</argument>
        </service>
        <service class="League\OAuth2\Server\CryptKey" id="laser.public_key">
            <argument>file://%kernel.project_dir%/config/jwt/public.pem</argument>
        </service>

        <service class="League\OAuth2\Server\AuthorizationServer" id="laser.api.authorization_server">
            <argument type="service" id="Laser\Core\Framework\Api\OAuth\ClientRepository"/>
            <argument type="service" id="Laser\Core\Framework\Api\OAuth\AccessTokenRepository"/>
            <argument type="service" id="Laser\Core\Framework\Api\OAuth\ScopeRepository"/>
            <argument type="service" id="laser.private_key"/>
            <argument>%env(APP_SECRET)%</argument>
        </service>

        <service class="League\OAuth2\Server\ResourceServer" id="laser.api.resource_server">
            <argument type="service" id="Laser\Core\Framework\Api\OAuth\AccessTokenRepository"/>
            <argument type="service" id="laser.public_key"/>
            <argument type="service" id="League\OAuth2\Server\AuthorizationValidators\BearerTokenValidator"/>
        </service>

        <service id="League\OAuth2\Server\AuthorizationValidators\BearerTokenValidator">
            <argument type="service" id="Laser\Core\Framework\Api\OAuth\AccessTokenRepository"/>
            <call method="setPublicKey">
                <argument type="service" id="laser.public_key"/>
            </call>
        </service>

        <service id="Laser\Core\Framework\Api\OAuth\BearerTokenValidator" decorates="League\OAuth2\Server\AuthorizationValidators\BearerTokenValidator">
            <argument type="service" id="Laser\Core\Framework\Api\OAuth\BearerTokenValidator.inner"/>
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument type="service" id="laser.jwt_config"/>
        </service>

        <!-- Events -->
        <service id="Laser\Core\Framework\Api\EventListener\JsonRequestTransformerListener">
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="Laser\Core\Framework\Api\EventListener\ExpectationSubscriber">
            <argument>%kernel.laser_version%</argument>
            <argument>%kernel.plugin_infos%</argument>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="Laser\Core\Framework\Api\EventListener\Authentication\SalesChannelAuthenticationListener">
            <tag name="kernel.event_subscriber"/>
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument type="service" id="Laser\Core\Framework\Routing\RouteScopeRegistry"/>
        </service>

        <service id="Laser\Core\Framework\Api\EventListener\Authentication\ApiAuthenticationListener">
            <tag name="kernel.event_subscriber"/>
            <argument type="service" id="laser.api.resource_server"/>
            <argument type="service" id="laser.api.authorization_server"/>
            <argument type="service" id="Laser\Core\Framework\Api\OAuth\UserRepository"/>
            <argument type="service" id="Laser\Core\Framework\Api\OAuth\RefreshTokenRepository"/>
            <argument type="service" id="Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory"/>
            <argument type="service" id="Laser\Core\Framework\Routing\RouteScopeRegistry"/>
            <argument type="string">%laser.api.access_token_ttl%</argument>
            <argument type="string">%laser.api.refresh_token_ttl%</argument>
        </service>

        <service id="Laser\Core\Framework\Api\EventListener\Authentication\UserCredentialsChangedSubscriber">
            <tag name="kernel.event_subscriber"/>
            <argument type="service" id="Laser\Core\Framework\Api\OAuth\RefreshTokenRepository"/>
            <argument type="service" id="Doctrine\DBAL\Connection"/>
        </service>

        <service id="Laser\Core\Framework\Api\Controller\UserController" public="true">
            <argument type="service" id="user.repository"/>
            <argument type="service" id="acl_user_role.repository"/>
            <argument type="service" id="acl_role.repository"/>
            <argument type="service" id="user_access_key.repository"/>
            <argument type="service" id="Laser\Core\System\User\UserDefinition"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Laser\Core\Framework\Api\Controller\IntegrationController" public="true">
            <argument type="service" id="integration.repository"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Laser\Core\Framework\Api\Response\ResponseFactoryInterfaceValueResolver">
            <tag name="controller.argument_value_resolver" priority="50"/>
            <argument type="service" id="Laser\Core\Framework\Api\Response\ResponseFactoryRegistry"/>
        </service>

        <service id="Laser\Core\Framework\Api\Route\ApiRouteLoader">
            <argument type="service" id="Laser\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
            <tag name="routing.loader"/>
        </service>

        <service id="Laser\Core\Framework\Validation\DataValidator">
            <argument type="service" id="validator"/>
        </service>

        <service id="Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory">
            <argument type="service" id="Nyholm\Psr7\Factory\Psr17Factory"/>
            <argument type="service" id="Nyholm\Psr7\Factory\Psr17Factory"/>
            <argument type="service" id="Nyholm\Psr7\Factory\Psr17Factory"/>
            <argument type="service" id="Nyholm\Psr7\Factory\Psr17Factory"/>
        </service>

        <service id="Nyholm\Psr7\Factory\Psr17Factory"/>

        <service id="Laser\Core\Framework\Validation\HappyPathValidator" decorates="validator">
            <argument type="service" id="Laser\Core\Framework\Validation\HappyPathValidator.inner"/>
        </service>

        <service id="Laser\Core\Framework\Api\Controller\CustomSnippetFormatController" public="true">
            <argument type="service" id="Laser\Core\Framework\Plugin\KernelPluginCollection" />
            <argument type="service" id="twig"/>
        </service>
    </services>
</container>
